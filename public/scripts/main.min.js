"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);}var CastigatoriHandler = /*#__PURE__*/function () {
  function CastigatoriHandler() {_classCallCheck(this, CastigatoriHandler);
    if (jQuery(".castigatori").length === 0) {
      return;
    }

    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(CastigatoriHandler, [{ key: "init", value:
    function init() {}

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {}

    /**
     * Listen for events
     */ }, { key: "handleEvents", value:
    function handleEvents() {
      var self = this;

      // Custom scroll
      jQuery('.custom-scrollbar').mCustomScrollbar({
        axis: "y",
        scrollButtons: { enable: true },
        theme: "dark"
      });

      jQuery('.mCSB_draggerRail').appendTo('.mCSB_draggerContainer');
    } }]);return CastigatoriHandler;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FzdGlnYXRvcmlIYW5kbGVyLmpzIiwibmFtZXMiOlsiQ2FzdGlnYXRvcmlIYW5kbGVyIiwiX2NsYXNzQ2FsbENoZWNrIiwialF1ZXJ5IiwibGVuZ3RoIiwiaW5pdCIsImhhbmRsZURPTSIsImhhbmRsZUV2ZW50cyIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwic2VsZiIsIm1DdXN0b21TY3JvbGxiYXIiLCJheGlzIiwic2Nyb2xsQnV0dG9ucyIsImVuYWJsZSIsInRoZW1lIiwiYXBwZW5kVG8iXSwic291cmNlcyI6WyJDYXN0aWdhdG9yaUhhbmRsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQ2FzdGlnYXRvcmlIYW5kbGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIGlmIChqUXVlcnkoXCIuY2FzdGlnYXRvcmlcIikubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuaW5pdCgpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlRE9NKCk7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVFdmVudHMoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIERlY2xhcmUgZ2xvYmFsIHZhcmlhYmxlc1xyXG4gICAgICovXHJcbiAgICBpbml0KCkge31cclxuXHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZSBET00gcXVlcmllc1xyXG4gICAgICovXHJcbiAgICBoYW5kbGVET00oKSB7fVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTGlzdGVuIGZvciBldmVudHNcclxuICAgICAqL1xyXG4gICAgaGFuZGxlRXZlbnRzKCkge1xyXG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcclxuICAgICAgICBcclxuICAgICAgICAvLyBDdXN0b20gc2Nyb2xsXHJcbiAgICAgICAgalF1ZXJ5KCcuY3VzdG9tLXNjcm9sbGJhcicpLm1DdXN0b21TY3JvbGxiYXIoe1xyXG4gICAgICAgICAgICBheGlzOiBcInlcIixcclxuICAgICAgICAgICAgc2Nyb2xsQnV0dG9uczogeyBlbmFibGU6IHRydWUgfSxcclxuICAgICAgICAgICAgdGhlbWU6IFwiZGFya1wiXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgalF1ZXJ5KCcubUNTQl9kcmFnZ2VyUmFpbCcpLmFwcGVuZFRvKCcubUNTQl9kcmFnZ2VyQ29udGFpbmVyJyk7XHJcbiAgICB9XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiMGpEQUFNQSxrQkFBa0I7RUFDcEIsU0FBQUEsbUJBQUEsRUFBYyxDQUFBQyxlQUFBLE9BQUFELGtCQUFBO0lBQ1YsSUFBSUUsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDQyxNQUFNLEtBQUssQ0FBQyxFQUFFO01BQ3JDO0lBQ0o7O0lBRUEsSUFBSSxDQUFDQyxJQUFJLEVBQUU7SUFDWCxJQUFJLENBQUNDLFNBQVMsRUFBRTtJQUNoQixJQUFJLENBQUNDLFlBQVksRUFBRTtFQUN2Qjs7RUFFQTtBQUNKO0FBQ0EsS0FGSUMsWUFBQSxDQUFBUCxrQkFBQSxLQUFBUSxHQUFBLFVBQUFDLEtBQUE7SUFHQSxTQUFBTCxLQUFBLEVBQU8sQ0FBQzs7SUFFUjtBQUNKO0FBQ0EsT0FGSSxNQUFBSSxHQUFBLGVBQUFDLEtBQUE7SUFHQSxTQUFBSixVQUFBLEVBQVksQ0FBQzs7SUFFYjtBQUNKO0FBQ0EsT0FGSSxNQUFBRyxHQUFBLGtCQUFBQyxLQUFBO0lBR0EsU0FBQUgsYUFBQSxFQUFlO01BQ1gsSUFBSUksSUFBSSxHQUFHLElBQUk7O01BRWY7TUFDQVIsTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUNTLGdCQUFnQixDQUFDO1FBQ3pDQyxJQUFJLEVBQUUsR0FBRztRQUNUQyxhQUFhLEVBQUUsRUFBRUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQy9CQyxLQUFLLEVBQUU7TUFDWCxDQUFDLENBQUM7O01BRUZiLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDYyxRQUFRLENBQUMsd0JBQXdCLENBQUM7SUFDbEUsQ0FBQyxZQUFBaEIsa0JBQUEifQ==

"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);}var HomepageHandler = /*#__PURE__*/function () {
  function HomepageHandler() {_classCallCheck(this, HomepageHandler);
    if (jQuery(".homepage-wrapper").length === 0) {
      return;
    }

    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(HomepageHandler, [{ key: "init", value:
    function init() {}

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {
      this.homepageWrapper = jQuery(".homepage-wrapper");
      this.goTo = this.homepageWrapper.find(".sticky-btns a");
      this.oreowalkSection = document.querySelector("#oreowalk");
      this.introSection = document.querySelector(".intro");
      this;
      this.header = document.querySelector(".header");
    }

    /**
     * Listen for events
     */ }, { key: "handleEvents", value:
    function handleEvents() {
      var self = this;

      this.goTo.on("click tap", function (e) {
        e.preventDefault();
        var target = jQuery(this).attr("href");
        jQuery("html, body").animate(
        {
          scrollTop: jQuery(target).offset().top - 20
        },
        600);

      });

      jQuery(window).on("scroll", function () {
        var firstSection = self.introSection.scrollHeight + self.header.scrollHeight - 80 / 100 * self.introSection.scrollHeight;
        var secondSection = self.introSection.scrollHeight + self.header.scrollHeight;
        var thirdSection = self.oreowalkSection.scrollHeight;

        // console.log(jQuery(this).scrollTop());

        if (jQuery(this).scrollTop() > Number(firstSection)) {
          jQuery(".oreowalk-btn").addClass("active");
          jQuery(".quiz-btn").removeClass("active");
        }

        if (jQuery(this).scrollTop() > Number(secondSection + (thirdSection - 50 / 100 * thirdSection))) {
          jQuery(".quiz-btn").addClass("active");
          jQuery(".oreowalk-btn").removeClass("active");
        }

        if (jQuery(this).scrollTop() < Number(firstSection) || jQuery(this).scrollTop() > Number(secondSection + (thirdSection - 20 / 100 * thirdSection))) {
          jQuery(".oreowalk-btn").removeClass("active");
          jQuery(".quiz-btn").removeClass("active");
        }
      });
    } }]);return HomepageHandler;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSG9tZXBhZ2VIYW5kbGVyLmpzIiwibmFtZXMiOlsiSG9tZXBhZ2VIYW5kbGVyIiwiX2NsYXNzQ2FsbENoZWNrIiwialF1ZXJ5IiwibGVuZ3RoIiwiaW5pdCIsImhhbmRsZURPTSIsImhhbmRsZUV2ZW50cyIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwiaG9tZXBhZ2VXcmFwcGVyIiwiZ29UbyIsImZpbmQiLCJvcmVvd2Fsa1NlY3Rpb24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJpbnRyb1NlY3Rpb24iLCJoZWFkZXIiLCJzZWxmIiwib24iLCJlIiwicHJldmVudERlZmF1bHQiLCJ0YXJnZXQiLCJhdHRyIiwiYW5pbWF0ZSIsInNjcm9sbFRvcCIsIm9mZnNldCIsInRvcCIsIndpbmRvdyIsImZpcnN0U2VjdGlvbiIsInNjcm9sbEhlaWdodCIsInNlY29uZFNlY3Rpb24iLCJ0aGlyZFNlY3Rpb24iLCJOdW1iZXIiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIl0sInNvdXJjZXMiOlsiSG9tZXBhZ2VIYW5kbGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEhvbWVwYWdlSGFuZGxlciB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBpZiAoalF1ZXJ5KFwiLmhvbWVwYWdlLXdyYXBwZXJcIikubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuaW5pdCgpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlRE9NKCk7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVFdmVudHMoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIERlY2xhcmUgZ2xvYmFsIHZhcmlhYmxlc1xyXG4gICAgICovXHJcbiAgICBpbml0KCkge31cclxuXHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZSBET00gcXVlcmllc1xyXG4gICAgICovXHJcbiAgICBoYW5kbGVET00oKSB7XHJcbiAgICAgICAgdGhpcy5ob21lcGFnZVdyYXBwZXIgPSBqUXVlcnkoXCIuaG9tZXBhZ2Utd3JhcHBlclwiKTtcclxuICAgICAgICB0aGlzLmdvVG8gPSB0aGlzLmhvbWVwYWdlV3JhcHBlci5maW5kKFwiLnN0aWNreS1idG5zIGFcIik7XHJcbiAgICAgICAgdGhpcy5vcmVvd2Fsa1NlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI29yZW93YWxrXCIpO1xyXG4gICAgICAgIHRoaXMuaW50cm9TZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5pbnRyb1wiKTtcclxuICAgICAgICB0aGlzXHJcbiAgICAgICAgdGhpcy5oZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhlYWRlclwiKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIExpc3RlbiBmb3IgZXZlbnRzXHJcbiAgICAgKi9cclxuICAgIGhhbmRsZUV2ZW50cygpIHtcclxuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XHJcblxyXG4gICAgICAgIHRoaXMuZ29Uby5vbihcImNsaWNrIHRhcFwiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIGxldCB0YXJnZXQgPSBqUXVlcnkodGhpcykuYXR0cihcImhyZWZcIik7XHJcbiAgICAgICAgICAgIGpRdWVyeShcImh0bWwsIGJvZHlcIikuYW5pbWF0ZShcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBzY3JvbGxUb3A6IGpRdWVyeSh0YXJnZXQpLm9mZnNldCgpLnRvcCAtIDIwLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIDYwMFxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBqUXVlcnkod2luZG93KS5vbihcInNjcm9sbFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxldCBmaXJzdFNlY3Rpb24gPSBzZWxmLmludHJvU2VjdGlvbi5zY3JvbGxIZWlnaHQgKyBzZWxmLmhlYWRlci5zY3JvbGxIZWlnaHQgLSAoODAgLyAxMDApICogc2VsZi5pbnRyb1NlY3Rpb24uc2Nyb2xsSGVpZ2h0O1xyXG4gICAgICAgICAgICBsZXQgc2Vjb25kU2VjdGlvbiA9IHNlbGYuaW50cm9TZWN0aW9uLnNjcm9sbEhlaWdodCArIHNlbGYuaGVhZGVyLnNjcm9sbEhlaWdodDtcclxuICAgICAgICAgICAgbGV0IHRoaXJkU2VjdGlvbiA9IHNlbGYub3Jlb3dhbGtTZWN0aW9uLnNjcm9sbEhlaWdodDtcclxuXHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGpRdWVyeSh0aGlzKS5zY3JvbGxUb3AoKSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KHRoaXMpLnNjcm9sbFRvcCgpID4gTnVtYmVyKGZpcnN0U2VjdGlvbikpIHtcclxuICAgICAgICAgICAgICAgIGpRdWVyeShcIi5vcmVvd2Fsay1idG5cIikuYWRkQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgICAgICBqUXVlcnkoXCIucXVpei1idG5cIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChqUXVlcnkodGhpcykuc2Nyb2xsVG9wKCkgPiBOdW1iZXIoc2Vjb25kU2VjdGlvbiArICh0aGlyZFNlY3Rpb24gLSAoNTAgLyAxMDApICogdGhpcmRTZWN0aW9uKSkpIHtcclxuICAgICAgICAgICAgICAgIGpRdWVyeShcIi5xdWl6LWJ0blwiKS5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgICAgIGpRdWVyeShcIi5vcmVvd2Fsay1idG5cIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChqUXVlcnkodGhpcykuc2Nyb2xsVG9wKCkgPCBOdW1iZXIoZmlyc3RTZWN0aW9uKSB8fCBqUXVlcnkodGhpcykuc2Nyb2xsVG9wKCkgPiBOdW1iZXIoc2Vjb25kU2VjdGlvbiArICh0aGlyZFNlY3Rpb24gLSAoMjAgLyAxMDApICogdGhpcmRTZWN0aW9uKSkpIHtcclxuICAgICAgICAgICAgICAgIGpRdWVyeShcIi5vcmVvd2Fsay1idG5cIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgICAgICBqUXVlcnkoXCIucXVpei1idG5cIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG4iXSwibWFwcGluZ3MiOiIwakRBQU1BLGVBQWU7RUFDakIsU0FBQUEsZ0JBQUEsRUFBYyxDQUFBQyxlQUFBLE9BQUFELGVBQUE7SUFDVixJQUFJRSxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQ0MsTUFBTSxLQUFLLENBQUMsRUFBRTtNQUMxQztJQUNKOztJQUVBLElBQUksQ0FBQ0MsSUFBSSxFQUFFO0lBQ1gsSUFBSSxDQUFDQyxTQUFTLEVBQUU7SUFDaEIsSUFBSSxDQUFDQyxZQUFZLEVBQUU7RUFDdkI7O0VBRUE7QUFDSjtBQUNBLEtBRklDLFlBQUEsQ0FBQVAsZUFBQSxLQUFBUSxHQUFBLFVBQUFDLEtBQUE7SUFHQSxTQUFBTCxLQUFBLEVBQU8sQ0FBQzs7SUFFUjtBQUNKO0FBQ0EsT0FGSSxNQUFBSSxHQUFBLGVBQUFDLEtBQUE7SUFHQSxTQUFBSixVQUFBLEVBQVk7TUFDUixJQUFJLENBQUNLLGVBQWUsR0FBR1IsTUFBTSxDQUFDLG1CQUFtQixDQUFDO01BQ2xELElBQUksQ0FBQ1MsSUFBSSxHQUFHLElBQUksQ0FBQ0QsZUFBZSxDQUFDRSxJQUFJLENBQUMsZ0JBQWdCLENBQUM7TUFDdkQsSUFBSSxDQUFDQyxlQUFlLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLFdBQVcsQ0FBQztNQUMxRCxJQUFJLENBQUNDLFlBQVksR0FBR0YsUUFB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

"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);}var LayoutHandler = /*#__PURE__*/function () {
  function LayoutHandler() {_classCallCheck(this, LayoutHandler);
    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(LayoutHandler, [{ key: "init", value:
    function init() {}

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {
      this.menu = jQuery("#menu");
      this.menuToggle = jQuery("#menu-hamburger");
      this.body = $("body");
      this.registerForm = $(".register-inner");
      this.registerFormModal = $(".register-inner .modal");
      this.openFormBtns = $(".open-form");
      this.closeFormBtns = $(".close-form");
      this.registerNewBtn = $(".register-new");
      this.closeModalPostPrize = $(".close-modal");
      this.eventAction = $("a[data-category]");
    }

    /**
     * Listen for events
     */ }, { key: "handleEvents", value:
    function handleEvents() {
      var self = this;

      // Open menu on click
      this.menuToggle.on("click tap", function () {
        if (self.menu.hasClass("active-menu")) {
          self.openMenu();
        } else {
          self.closeMenu();
        }
      });

      this.registerNewBtn.on("click tap", function (event) {
        event.preventDefault();

        self.registerFormModal.removeClass("open");
      });

      this.openFormBtns.each(function () {
        if ($(this).length > 0) {
          $(this).on("click tap", function (event) {
            event.preventDefault();

            self.registerForm.addClass("open");
            self.body.addClass("menu-open");

            setTimeout(function () {
              self.closeMenu(true);
            }, 400);
          });
        }
      });

      this.closeFormBtns.each(function () {
        if ($(this).length > 0) {
          $(this).on("click tap", function (event) {
            event.preventDefault();

            self.registerForm.removeClass("open");
            self.registerFormModal.removeClass("open");
            self.body.removeClass("menu-open");
          });
        }
      });

      setTimeout(function () {
        self.setBgImage();
      }, 150);

      $(".open-form").on("click tap", function (e) {
        e.preventDefault();

        var currentDate = Math.floor(Date.now() / 1000);
        var startCampaignDate = 1689109201;
        var endCampaignDate = 1691787600;

        if (currentDate < startCampaignDate) {
          $(".pre-post-modal").addClass("open");
          self.body.addClass("modal-opened");
        }

        if (currentDate > endCampaignDate) {
          $(".pre-post-modal").addClass("open");
          self.body.addClass("modal-opened");
        }

        if (currentDate > startCampaignDate && currentDate < endCampaignDate) {
          $(".pre-post-modal").removeClass("open");
          self.body.removeClass("modal-opened");
        }
      });

      self.closeModalPostPrize.on("click tap", function (e) {
        e.preventDefault();

        $(".page-modal--prize").removeClass("open");
        self.body.removeClass("modal-opened");
      });

      if (this.eventAction.length > 0) {
        this.eventAction.on("click tap", function () {
          var category = $(this).attr("data-category");
          var label = $(this).attr("data-label");
          self.performanceEvent(category, label);
        });
      }
    } }, { key: "performanceEvent", value:

    function performanceEvent(category, label) {
      if ("ga" in window) {
        var tracker = ga.getAll()[0];
        if (tracker) {
          tracker.send("event", category, "click", label);
        }
      }
    }

    /**
     * Set background image if attribute "data-image" exist
     */ }, { key: "setBgImage", value:
    function setBgImage() {
      jQuery("*[data-image]").each(function () {
        var imageUrl = jQuery(this).attr("data-image");

        if (imageUrl) {
          jQuery(this).css("background-image", "url(" + imageUrl + ")");
        }
      });
    } }, { key: "openMenu", value:

    function openMenu() {
      this.menu.removeClass("active-menu");
      this.body.addClass("menu-open");
      jQuery(".menu h2").text("Închide");
      jQuery(".menu-wrapper input[type='checkbox']").prop("checked", true);
    } }, { key: "closeMenu", value:

    function closeMenu() {var lockScroll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      if (!lockScroll) {
        this.body.removeClass("menu-open");
      }

      this.menu.addClass("active-menu");
      jQuery(".menu h2").text("MENIU");
      jQuery(".menu-wrapper input[type='checkbox']").prop("checked", false);
    } }]);return LayoutHandler;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,

"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);}var OreowalkHandler = /*#__PURE__*/function () {
  function OreowalkHandler() {_classCallCheck(this, OreowalkHandler);
    if (jQuery(".oreo-slider").length === 0) {
      return;
    }

    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(OreowalkHandler, [{ key: "init", value:
    function init() {}

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {
      this.oreoCarousel = jQuery(".oreo-carousel");
      this.videoWrapper = jQuery(".redirect-content .modal-btn");
      this.closeModal = jQuery(".close");
      this.videoModal = jQuery("#videoModal");
    }

    /**
     * Listen for events
     */ }, { key: "handleEvents", value:
    function handleEvents() {
      var self = this;

      this.videoWrapper.on("click tap", function (e) {
        e.preventDefault();

        var id = jQuery(this).attr("data-videoid");
        var videoUrl = "https://www.youtube.com/embed/" + id;
        self.videoModal.find("iframe").attr("src", videoUrl);

        setTimeout(function () {
          jQuery("#videoModal").modal("show");
        }, 100);
      });

      // Close video modal
      this.closeModal.on("click tap", function (e) {
        e.preventDefault();

        setTimeout(function () {
          self.videoModal.find("iframe").attr("src", "");
        }, 300);
      });

      this.videoModal.on('hidden.bs.modal', function (event) {
        setTimeout(function () {
          self.videoModal.find("iframe").attr("src", "");
        }, 300);
      });

      setTimeout(function () {
        self.initCarousel(self.oreoCarousel);
      }, 10);
    } }, { key: "initCarousel", value:

    function initCarousel(carouselClass) {
      var swiper = new Swiper(carouselClass, {
        loop: false,
        slidesPerView: 5,
        allowTouchMove: false,
        parallax: true,
        autoplay: {
          delay: 2000,
          disableOnInteraction: false
        },
        speed: 600,
        breakpoints: {
          // 1499: {
          //     loop: true,
          //     slidesPerView: 1,
          //     allowTouchMove: true,
          // },
          1199: {
            loop: true,
            slidesPerView: 1,
            allowTouchMove: true
          },
          767: {
            loop: true,
            slidesPerView: 1,
            allowTouchMove: true
          }
        },
        pagination: {
          el: ".swiper-pagination",
          type: "bullets",
          clickable: true
        },
        navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev"
        }
      });
    } }]);return OreowalkHandler;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3Jlb3dhbGtIYW5kbGVyLmpzIiwibmFtZXMiOlsiT3Jlb3dhbGtIYW5kbGVyIiwiX2NsYXNzQ2FsbENoZWNrIiwialF1ZXJ5IiwibGVuZ3RoIiwiaW5pdCIsImhhbmRsZURPTSIsImhhbmRsZUV2ZW50cyIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwib3Jlb0Nhcm91c2VsIiwidmlkZW9XcmFwcGVyIiwiY2xvc2VNb2RhbCIsInZpZGVvTW9kYWwiLCJzZWxmIiwib24iLCJlIiwicHJldmVudERlZmF1bHQiLCJpZCIsImF0dHIiLCJ2aWRlb1VybCIsImZpbmQiLCJzZXRUaW1lb3V0IiwibW9kYWwiLCJldmVudCIsImluaXRDYXJvdXNlbCIsImNhcm91c2VsQ2xhc3MiLCJzd2lwZXIiLCJTd2lwZXIiLCJsb29wIiwic2xpZGVzUGVyVmlldyIsImFsbG93VG91Y2hNb3ZlIiwicGFyYWxsYXgiLCJhdXRvcGxheSIsImRlbGF5IiwiZGlzYWJsZU9uSW50ZXJhY3Rpb24iLCJzcGVlZCIsImJyZWFrcG9pbnRzIiwicGFnaW5hdGlvbiIsImVsIiwidHlwZSIsImNsaWNrYWJsZSIsIm5hdmlnYXRpb24iLCJuZXh0RWwiLCJwcmV2RWwiXSwic291cmNlcyI6WyJPcmVvd2Fsa0hhbmRsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgT3Jlb3dhbGtIYW5kbGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIGlmIChqUXVlcnkoXCIub3Jlby1zbGlkZXJcIikubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuaW5pdCgpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlRE9NKCk7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVFdmVudHMoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIERlY2xhcmUgZ2xvYmFsIHZhcmlhYmxlc1xyXG4gICAgICovXHJcbiAgICBpbml0KCkge31cclxuXHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZSBET00gcXVlcmllc1xyXG4gICAgICovXHJcbiAgICBoYW5kbGVET00oKSB7XHJcbiAgICAgICAgdGhpcy5vcmVvQ2Fyb3VzZWwgPSBqUXVlcnkoXCIub3Jlby1jYXJvdXNlbFwiKTtcclxuICAgICAgICB0aGlzLnZpZGVvV3JhcHBlciA9IGpRdWVyeShcIi5yZWRpcmVjdC1jb250ZW50IC5tb2RhbC1idG5cIik7XHJcbiAgICAgICAgdGhpcy5jbG9zZU1vZGFsID0galF1ZXJ5KFwiLmNsb3NlXCIpO1xyXG4gICAgICAgIHRoaXMudmlkZW9Nb2RhbCA9IGpRdWVyeShcIiN2aWRlb01vZGFsXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTGlzdGVuIGZvciBldmVudHNcclxuICAgICAqL1xyXG4gICAgaGFuZGxlRXZlbnRzKCkge1xyXG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcclxuXHJcbiAgICAgICAgdGhpcy52aWRlb1dyYXBwZXIub24oXCJjbGljayB0YXBcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGlkID0galF1ZXJ5KHRoaXMpLmF0dHIoXCJkYXRhLXZpZGVvaWRcIik7XHJcbiAgICAgICAgICAgIGxldCB2aWRlb1VybCA9IFwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvXCIgKyBpZDtcclxuICAgICAgICAgICAgc2VsZi52aWRlb01vZGFsLmZpbmQoXCJpZnJhbWVcIikuYXR0cihcInNyY1wiLCB2aWRlb1VybCk7XHJcblxyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGpRdWVyeShcIiN2aWRlb01vZGFsXCIpLm1vZGFsKFwic2hvd1wiKTtcclxuICAgICAgICAgICAgfSwgMTAwKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gQ2xvc2UgdmlkZW8gbW9kYWxcclxuICAgICAgICB0aGlzLmNsb3NlTW9kYWwub24oXCJjbGljayB0YXBcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBzZWxmLnZpZGVvTW9kYWwuZmluZChcImlmcmFtZVwiKS5hdHRyKFwic3JjXCIsIFwiXCIpO1xyXG4gICAgICAgICAgICB9LCAzMDApO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLnZpZGVvTW9kYWwub24oJ2hpZGRlbi5icy5tb2RhbCcsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHNlbGYudmlkZW9Nb2RhbC5maW5kKFwiaWZyYW1lXCIpLmF0dHIoXCJzcmNcIiwgXCJcIik7XHJcbiAgICAgICAgICAgIH0sIDMwMCk7XHJcbiAgICAgICAgICB9KVxyXG5cclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgc2VsZi5pbml0Q2Fyb3VzZWwoc2VsZi5vcmVvQ2Fyb3VzZWwpO1xyXG4gICAgICAgIH0sIDEwKTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0Q2Fyb3VzZWwoY2Fyb3VzZWxDbGFzcykge1xyXG4gICAgICAgIGNvbnN0IHN3aXBlciA9IG5ldyBTd2lwZXIoY2Fyb3VzZWxDbGFzcywge1xyXG4gICAgICAgICAgICBsb29wOiBmYWxzZSxcclxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogNSxcclxuICAgICAgICAgICAgYWxsb3dUb3VjaE1vdmU6IGZhbHNlLFxyXG4gICAgICAgICAgICBwYXJhbGxheDogdHJ1ZSxcclxuICAgICAgICAgICAgYXV0b3BsYXk6IHtcclxuICAgICAgICAgICAgICAgIGRlbGF5OiAyMDAwLFxyXG4gICAgICAgICAgICAgICAgZGlzYWJsZU9uSW50ZXJhY3Rpb246IGZhbHNlLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzcGVlZDogNjAwLFxyXG4gICAgICAgICAgICBicmVha3BvaW50czoge1xyXG4gICAgICAgICAgICAgICAgLy8gMTQ5OToge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIGxvb3A6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgc2xpZGVzUGVyVmlldzogMSxcclxuICAgICAgICAgICAgICAgIC8vICAgICBhbGxvd1RvdWNoTW92ZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIC8vIH0sXHJcbiAgICAgICAgICAgICAgICAxMTk5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbG9vcDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIGFsbG93VG91Y2hNb3ZlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIDc2Nzoge1xyXG4gICAgICAgICAgICAgICAgICAgIGxvb3A6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMSxcclxuICAgICAgICAgICAgICAgICAgICBhbGxvd1RvdWNoTW92ZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHBhZ2luYXRpb246IHtcclxuICAgICAgICAgICAgICAgIGVsOiBcIi5zd2lwZXItcGFnaW5hdGlvblwiLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogXCJidWxsZXRzXCIsXHJcbiAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG5hdmlnYXRpb246IHtcclxuICAgICAgICAgICAgICAgIG5leHRFbDogXCIuc3dpcGVyLWJ1dHRvbi1uZXh0XCIsXHJcbiAgICAgICAgICAgICAgICBwcmV2RWw6IFwiLnN3aXBlci1idXR0b24tcHJldlwiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbiJdLCJtYXBwaW5ncyI6IjBqREFBTUEsZUFBZTtFQUNqQixTQUFBQSxnQkFBQSxFQUFjLENBQUFDLGVBQUEsT0FBQUQsZUFBQTtJQUNWLElBQUlFLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQ0MsTUFBTSxLQUFLLENBQUMsRUFBRTtNQUNyQztJQUNKOztJQUVBLElBQUksQ0FBQ0MsSUFBSSxFQUFFO0lBQ1gsSUFBSSxDQUFDQyxTQUFTLEVBQUU7SUFDaEIsSUFBSSxDQUFDQyxZQUFZLEVBQUU7RUFDdkI7O0VBRUE7QUFDSjtBQUNBLEtBRklDLFlBQUEsQ0FBQVAsZUFBQSxLQUFBUSxHQUFBLFVBQUFDLEtBQUE7SUFHQSxTQUFBTCxLQUFBLEVBQU8sQ0FBQzs7SUFFUjtBQUNKO0FBQ0EsT0FGSSxNQUFBSSxHQUFBLGVBQUFDLEtBQUE7SUFHQSxTQUFBSixVQUFBLEVBQVk7TUFDUixJQUFJLENBQUNLLFlBQVksR0FBR1IsTUFBTSxDQUFDLGdCQUFnQixDQUFDO01BQzVDLElBQUksQ0FBQ1MsWUFBWSxHQUFHVCxNQUFNLENBQUMsOEJBQThCLENBQUM7TUFDMUQsSUFBSSxDQUFDVSxVQUFVLEdBQUdWLE1BQU0sQ0FBQyxRQUFRLENBQUM7TUFDbEMsSUFBSSxDQUFDVyxVQUFVLEdBQUdYLE1BQU0sQ0FBQyxhQUFhLENBQUM7SUFDM0M7O0lBRUE7QUFDSjtBQUNBLE9BRkksTUFBQU0sR0FBQSxrQkFBQUMsS0FBQTtJQUdBLFNBQUFILGFBQUEsRUFBZTtNQUNYLElBQUlRLElBQUksR0FBRyxJQUFJOztNQUVmLElBQUksQ0FBQ0gsWUFBWSxDQUFDSSxFQUFFLENBQUMsV0FBVyxFQUFFLFVBQVVDLENBQUMsRUFBRTtRQUMzQ0EsQ0FBQyxDQUFDQyxjQUFjLEVBQUU7O1FBRWxCLElBQUlDLEVBQUUsR0FBR2hCLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQ2lCLElBQUksQ0FBQyxjQUFjLENBQUM7UUFDMUMsSUFBSUMsUUFBUSxHQUFHLGdDQUFnQyxHQUFHRixFQUFFO1FBQ3BESixJQUFJLENBQUNELFVBQVUsQ0FBQ1EsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDRixJQUFJLENBQUMsS0FBSyxFQUFFQyxRQUFRLENBQUM7O1FBRXBERSxVQUFVLENBQUMsWUFBWTtVQUNuQnBCLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQ3FCLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDdkMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztNQUNYLENBQUMsQ0FBQzs7TUFFRjtNQUNBLElBQUksQ0FBQ1gsVUFBVSxDQUFDRyxFQUFFLENBQUMsV0FBVyxFQUFFLFVBQVVDLENBQUMsRUFBRTtRQUN6Q0EsQ0FBQyxDQUFDQyxjQUFjLEVBQUU7O1FBRWxCSyxVQUFVLENBQUMsWUFBTTtVQUNiUixJQUFJLENBQUNELFVBQVUsQ0FBQ1EsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDRixJQUFJLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQztRQUNsRCxDQUFDLEVBQUUsR0FBRyxDQUFDO01BQ1gsQ0FBQyxDQUFDOztNQUVGLElBQUksQ0FBQ04sVUFBVSxDQUFDRSxFQUFFLENBQUMsaUJBQWlCLEVBQUUsVUFBVVMsS0FBSyxFQUFFO1FBQ25ERixVQUFVLENBQUMsWUFBTTtVQUNiUixJQUFJLENBQUNELFVBQVUsQ0FBQ1EsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDRixJQUFJLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQztRQUNsRCxDQUFDLEVBQUUsR0FBRyxDQUFDO01BQ1QsQ0FBQyxDQUFDOztNQUVKRyxVQUFVLENBQUMsWUFBTTtRQUNiUixJQUFJLENBQUNXLFlBQVksQ0FBQ1gsSUFBSSxDQUFDSixZQUFZLENBQUM7TUFDeEMsQ0FBQyxFQUFFLEVBQUUsQ0FBQztJQUNWLENBQUMsTUFBQUYsR0FBQSxrQkFBQUMsS0FBQTs7SUFFRCxTQUFBZ0IsYUFBYUMsYUFBYSxFQUFFO01BQ3hCLElBQU1DLE1BQU0sR0FBRyxJQUFJQyxNQUFNLENBQUNGLGFBQWEsRUFBRTtRQUNyQ0csSUFBSSxFQUFFLEtBQUs7UUFDWEMsYUFBYSxFQUFFLENBQUM7UUFDaEJDLGNBQWMsRUFBRSxLQUFLO1FBQ3JCQyxRQUFRLEVBQUUsSUFBSTtRQUNkQyxRQUFRLEVBQUU7VUFDTkMsS0FBSyxFQUFFLElBQUk7VUFDWEMsb0JBQW9CLEVBQUU7UUFDMUIsQ0FBQztRQUNEQyxLQUFLLEVBQUUsR0FBRztRQUNWQyxXQUFXLEVBQUU7VUFDVDtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0EsSUFBSSxFQUFFO1lBQ0ZSLElBQUksRUFBRSxJQUFJO1lBQ1ZDLGFBQWEsRUFBRSxDQUFDO1lBQ2hCQyxjQUFjLEVBQUU7VUFDcEIsQ0FBQztVQUNELEdBQUcsRUFBRTtZQUNERixJQUFJLEVBQUUsSUFBSTtZQUNWQyxhQUFhLEVBQUUsQ0FBQztZQUNoQkMsY0FBYyxFQUFFO1VBQ3BCO1FBQ0osQ0FBQztRQUNETyxVQUFVLEVBQUU7VUFDUkMsRUFBRSxFQUFFLG9CQUFvQjtVQUN4QkMsSUFBSSxFQUFFLFNBQVM7VUFDZkMsU0FBUyxFQUFFO1FBQ2YsQ0FBQztRQUNEQyxVQUFVLEVBQUU7VUFDUkMsTUFBTSxFQUFFLHFCQUFxQjtVQUM3QkMsTUFBTSxFQUFFO1FBQ1o7TUFDSixDQUFDLENBQUM7SUFDTixDQUFDLFlBQUE1QyxlQUFBIn0=

"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);enumerableOnly && (symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;})), keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = null != arguments[i] ? arguments[i] : {};i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {_defineProperty(target, key, source[key]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}return target;}function _defineProperty(obj, key, value) {key = _toPropertyKey(key);if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);}var QuizHandler = /*#__PURE__*/function () {
  function QuizHandler() {_classCallCheck(this, QuizHandler);
    if (jQuery(".quiz").length === 0) {
      return;
    }

    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(QuizHandler, [{ key: "init", value:
    function init() {}

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {
      this.nextButton = document.querySelectorAll(".nextButton");
      this.finalButton = document.querySelector(".finalButton");
      this.allAnswersWrapper = document.querySelectorAll(".answers");
      this.allAnswers = document.querySelectorAll(".group");
      this.title = document.querySelector(".content h2");
      this.resultVariant = document.querySelector(".finalResult .image");
      this.shareFacebook = document.querySelector(".finalResult .share-answer a");
    }

    /**
     * Listen for events
     */ }, { key: "handleEvents", value:
    function handleEvents() {
      var self = this;
      var restultArray = [];
      var finalData = {
        "shareTitle": 'Am aflat care biscuit OREO se potrivește stilului meu vestimentar!',
        "shareDescription": 'Un quiz simplu și sunt gata să-mi creez un #OOTD jucăuș inspirat de biscuitul meu OREO. În plus, oricine se înscrie în campania OREO #OOTD are șansa să câștige premii pentru outfituri inspirate: vouchere Fashion Days sau o sesiune de shopping cu un stilist profesionist în valoare de 7000 RON. Ție care Oreo ți se potrivește azi?',
        "shareImg": ""
      };

      this.allAnswersWrapper.forEach(function (item) {
        item.addEventListener("click", function (e) {
          var clicked = e.target.closest(".group");
          if (!clicked) return;

          self.allAnswers.forEach(function (answer) {return answer.classList.remove("selected");});
          clicked.classList.add("selected");
        });
      });

      this.nextButton.forEach(function (item) {
        item.addEventListener("click", function (e) {
          var dataQuestion = e.target.getAttribute("data-question");
          var currentQuestion = document.querySelector(".question-".concat(dataQuestion));
          var nextQuestion = document.querySelector(".question-".concat(Number(dataQuestion) + 1));

          self.allAnswers.forEach(function (answer) {
            if (answer.classList.contains("selected")) {
              restultArray.push(document.querySelector(".selected").getAttribute("data-answer"));

              currentQuestion.classList.remove("active");
              nextQuestion.classList.add("active");

              answer.classList.remove("selected");
            }
          });
        });
      });

      this.finalButton.addEventListener("click", function () {
        self.allAnswers.forEach(function (answer) {
          if (answer.classList.contains("selected")) {
            restultArray.push(document.querySelector(".selected").getAttribute("data-answer"));

            document.querySelector(".question-7").classList.remove("active");
            document.querySelector(".finalResult").classList.add("active");
            self.title.textContent = "Rezultat Quiz";

            answer.classList.remove("selected");

            var countAnswers = function countAnswers(restultArray) {
              return restultArray.reduce(function (result, value) {return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, value, (result[value] || 0) + 1));}, {});
            };

            var max = Object.keys(countAnswers(restultArray)).reduce(function (a, v) {return Math.max(a, countAnswers(restultArray)[v]);}, -Infinity);
            var result = Object.keys(countAnswers(restultArray)).find(function (v) {return countAnswers(restultArray)[v] === max;});

            console.log(result);

            self.resultVariant.setAttribute("src", "".concat(absolutePath, "/quiz/result-").concat(result, ".png"));

            finalData.shareImg = "".concat(location.origin, "/share/quiz/share-result-").concat(result, ".png");
            self.shareFacebook.setAttribute("href", "https://www.facebook.com/sharer/sharer.php?u=".concat(finalData.shareImg));
          }
        });
      });
    } }]);return QuizHandler;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,

"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);}var RegisterPageHandler = /*#__PURE__*/function () {
  function RegisterPageHandler() {_classCallCheck(this, RegisterPageHandler);
    if (jQuery(".register-inner").length === 0) {
      return;
    }

    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(RegisterPageHandler, [{ key: "init", value:
    function init() {}

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {
      this.form = $("#register-form");
      this.phoneInput = $("#phone");
      this.storeInput = $("#store");
      this.receiptInput = $("#receipt");
      this.dateInput = $("#date");
      this.ageInput = $("#age");
      this.termsInput = $("#terms");
      this.rulesInput = $("#rules");
      this.formWrapper = $(".register-inner .form-wrapper");
      this.receiptInfo = $(".register-inner .receipt-info");
      this.receiptModal = $(".register-inner .receipt-modal");
      this.formModal = $(".register-inner .modal");
      this.submitErrText = $(".register-inner .submit-err");
      this.modalDefault = $(".modal");
      this.modalPrize = $(".page-modal--prize");
      this.modalPrePost = $(".pre-post-modal");
      this.btnRegisterNew = $(".register-again");
    }

    /**
     * Listen for events
     */ }, { key: "handleEvents", value:
    function handleEvents() {
      var self = this;

      var bonuri = [
      {
        name: "auchan",
        image: "".concat(absolutePath, "/bonuri/Auchan.png")
      },
      {
        name: "carrefour",
        image: "".concat(absolutePath, "/bonuri/Carrefour.png")
      },
      {
        name: "cora",
        image: "".concat(absolutePath, "/bonuri/Cora.png")
      },
      {
        name: "kaufland",
        image: "".concat(absolutePath, "/bonuri/Kaufland.png")
      },
      {
        name: "mega",
        image: "".concat(absolutePath, "/bonuri/Mega-Image.png")
      },
      {
        name: "metro",
        image: "".concat(absolutePath, "/bonuri/Metro.png")
      },
      {
        name: "penny",
        image: "".concat(absolutePath, "/bonuri/Penny.png")
      },
      {
        name: "profi",
        image: "".concat(absolutePath, "/bonuri/Profi.png")
      },
      {
        name: "selgros",
        image: "".concat(absolutePath, "/bonuri/Selgros.png")
      },
      {
        name: "altele",
        image: "".concat(absolutePath, "/bonuri/Auchan.png")
      },
      {
        name: "",
        image: "".concat(absolutePath, "/bonuri/Auchan.png")
      }];


      this.receiptInfo.on("click", function (e) {
        e.stopPropagation();
        self.receiptModal.toggleClass("active");
      });

      this.formWrapper.on("click", function (e) {
        if ($(e.target).closest(".receipt-modal").length < 1) {
          self.receiptModal.removeClass("active");
        }
      });

      this.storeInput.on("change", function () {
        var receiptImg = $(".receipt-modal img");
        var option = $(this).val();

        for (var i = 0; i < bonuri.length; i++) {
          if (option === bonuri[i].name) {
            receiptImg.attr("src", bonuri[i].image);
          }
        }
      });

      var campaignMaxDate = null;
      var currentDate = Math.floor(Date.now() / 1000);

      // local time: end campaign date
      // endDate 30 mai
      var endCampaignDate = 1688072399;
      if (currentDate <= endCampaignDate) {
        campaignMaxDate = new Date();
      } else {
        campaignMaxDate = new Date(2023, 6 - 1, 29);
      }

      this.dateInput.datepicker({
        monthNames: ["Ianuarie", "Februarie", "Martie", "Aprilie", "Mai", "Iunie", "Iulie", "August", "Septembrie", "Octombrie", "Noiembrie", "Decembrie"],
        monthNamesShort: ["Ian", "Feb", "Mar", "Apr", "Mai", "Iun", "Iul", "Aug", "Sep", "Oct", "Noi", "Dec"],
        dayNames: ["Duminică", "Luni", "Marți", "Miercuri", "Joi", "Vineri", "Sâmbată"],
        dayNamesShort: ["Dum", "Lun", "Mar", "Mie", "Joi", "Vin", "Sâb"],
        dayNamesMin: ["Du", "Lu", "Ma", "Mi", "Jo", "Vi", "Sâ"],
        dateFormat: "dd/mm/yy",
        orientation: "bottom",
        minDate: new Date(2023, 5 - 1, 19),
        maxDate: campaignMaxDate,
        beforeShow: function beforeShow() {
          setTimeout(function () {
            $(".ui-datepicker").css("z-index", 25);
          }, 0);
        }
      });

      this.dateInput.on("change", function (e) {
        $(this).valid();
      });

      $.validator.addMethod(
      "digitsonly",
      function (value, element) {
        return this.optional(element) || /^[0-9]+$/g.test(value);
      },
      "");


      $.validator.addMethod(
      "phoneRO",
      function (phone_number, element) {
        phone_number = phone_number.replace(/\(|\)|\s+|-/g, "");
        return (
          this.optional(element) ||
          phone_number.length > 9 &&
          phone_number.match(
          /^(?:(?:07\d{2}\S?\d{3}\S?\d{3}|(21|31)\d{1}\S?\d{3}\S?\d{3}|((2|3)[3-7]\d{1})\S?\d{3}\S?\d{3}|(8|9)0\d{1}\S?\d{3}\S?\d{3}))$/));


      },
      "");


      $.validator.addMethod(
      "receiptRegex",
      function (value, element) {
        return this.optional(element) || /^(?![\s-0]*$)\d{1,25}(?:[\s-]\d{1,25})*$/g.test(value);
      },
      "");


      this.form.validate({
        rules: {
          phone: {
            digitsonly: true,
            required: true,
            minlength: 10,
            maxlength: 10,
            number: true,
            phoneRO: true
          },
          store: {
            required: true
          },
          receipt: {
            required: true,
            maxlength: 25,
            receiptRegex: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          },
          date: {
            required: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          },
          age: {
            required: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          },
          terms: {
            required: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          },
          rules: {
            required: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          }
        },
        messages: {
          phone: {
            digitsonly: "Te rugăm să introduci un număr de telefon valid.",
            required: "Numărul de telefon introdus este incomplet.",
            minlength: "Numărul de telefon introdus este incomplet.",
            maxlength: "Te rugăm să introduci un număr de telefon valid.",
            number: "Te rugăm să introduci un număr de telefon valid.",
            phoneRO: "Te rugăm să introduci un număr de telefon valid."
          },
          store: {
            required: "Te rugăm să selectezi un magazin."
          },
          receipt: {
            required: "Te rugăm să introduci un număr de bon valid.",
            maxlength: "Te rugăm să introduci un număr de bon valid.",
            receiptRegex: "Te rugăm să introduci un număr de bon valid."
          },
          date: {
            required: "Te rugăm să introduci data bonului fiscal."
          },
          age: {
            required: "Este necesar să bifezi că declari că ai peste 18 ani."
          },
          terms: {
            required: "Este necesar să bifezi că ai citit și că ești de acord cu Termenii și condițiile."
          },
          rules: {
            required: "Este necesar să bifezi că ai citit și că ești de acord cu Regulamentul campaniei."
          }
        },
        highlight: function highlight(element) {
          $(element).addClass("error");
          $(element).parents(".form-group").addClass("error");
        },
        unhighlight: function unhighlight(element) {
          $(element).removeClass("error");
          $(element).parents(".form-group").removeClass("error");
        },
        errorPlacement: function errorPlacement(error, element) {
          error.insertAfter(element);
        },
        submitHandler: function submitHandler(form, event) {
          event.preventDefault();

          if ("ga" in window) {
            var tracker = ga.getAll()[0];
            if (tracker) {
              tracker.send("event", 'Sectiune Inscrie-te', "click", 'Click - Inscrie Bon');
            }
          }
          /*ttq.track('SubmitForm');
          gtag_report_conversion();
          fbq('track', 'Trimite-Bon');*/

          $.ajax({
            method: "POST",
            url: "/register-campaign",
            data: $("#register-form").serialize(),
            cache: false,
            beforeSend: function beforeSend() {
              self.formWrapper.addClass("show-loader");
            },
            success: function success(response) {
              if (response.status) {
                self.resetForm();
                self.resetRecaptcha();
              }

              switch (response.messageStatus) {
                case 'prize':
                  self.modalPrize.addClass('open');
                  self.modalPrize.find('.content-wrapper').html(response.message);
                  break;
                case 'blocat_corecte':
                  self.modalDefault.addClass('open');
                  self.modalDefault.find('.modal-content-wrapper').html(response.message);
                  self.btnRegisterNew.addClass('d-none');
                  break;
                case 'precampanie':
                case 'postcampanie':
                  self.modalPrePost.addClass('open');
                  self.modalPrePost.find('.text-wrapper').html(response.message);
                  break;
                default:
                  self.modalDefault.addClass('open');
                  self.modalDefault.find('.modal-content-wrapper').html(response.message);
                  break;}

            },
            complete: function complete() {
              self.formWrapper.removeClass("show-loader");
            },
            error: function error() {
              self.submitErrText.html("<p>A intervenit o eroare neprevăzută. Te rugăm să încerci din nou mai târziu.</p>");
            }
          });
        }
      });
    }

    /**
     * Function of reseting form
     */ }, { key: "resetForm", value:
    function resetForm() {
      this.phoneInput.val("");
      this.storeInput.val("");
      this.receiptInput.val("");
      this.dateInput.val("");
      this.rulesInput.prop("checked", false);
      this.rulesInput.attr("checked", false);
      this.termsInput.prop("checked", false);
      this.termsInput.attr("checked", false);
      this.ageInput.prop("checked", false);
      this.ageInput.attr("checked", false);
    }

    /**
     * Function of resetting recaptcha
     */ }, { key: "resetRecaptcha", value:
    function resetRecaptcha() {
      setTimeout(function () {
        // reset captcha
        grecaptcha.reset();
      }, 500);
    } }]);return RegisterPageHandler;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,

"use strict"; // init handlers
var layoutHandler = null;
var castigatoriHandler = null;
var registerPageHandler = null;
var quizHandler = null;
var homepageHandler = null;
var oreowalkHandler = null;

var initHandlers = function initHandlers() {
  layoutHandler = new LayoutHandler();
  castigatoriHandler = new CastigatoriHandler();
  registerPageHandler = new RegisterPageHandler();
  quizHandler = new QuizHandler();
  homepageHandler = new HomepageHandler();
  oreowalkHandler = new OreowalkHandler();
};

// uncomment this to use jQuery
(function ($) {
  $(document).ready(function () {
    initHandlers();
  });
})(jQuery);

// init handlers using vanilla
// document.addEventListener('DOMContentLoaded', () => { initHandlers(); });
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm5hbWVzIjpbImxheW91dEhhbmRsZXIiLCJjYXN0aWdhdG9yaUhhbmRsZXIiLCJyZWdpc3RlclBhZ2VIYW5kbGVyIiwicXVpekhhbmRsZXIiLCJob21lcGFnZUhhbmRsZXIiLCJvcmVvd2Fsa0hhbmRsZXIiLCJpbml0SGFuZGxlcnMiLCJMYXlvdXRIYW5kbGVyIiwiQ2FzdGlnYXRvcmlIYW5kbGVyIiwiUmVnaXN0ZXJQYWdlSGFuZGxlciIsIlF1aXpIYW5kbGVyIiwiSG9tZXBhZ2VIYW5kbGVyIiwiT3Jlb3dhbGtIYW5kbGVyIiwiJCIsImRvY3VtZW50IiwicmVhZHkiLCJqUXVlcnkiXSwic291cmNlcyI6WyJtYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGluaXQgaGFuZGxlcnNcclxubGV0IGxheW91dEhhbmRsZXIgPSBudWxsO1xyXG5sZXQgY2FzdGlnYXRvcmlIYW5kbGVyID0gbnVsbDtcclxubGV0IHJlZ2lzdGVyUGFnZUhhbmRsZXIgPSBudWxsO1xyXG5sZXQgcXVpekhhbmRsZXIgPSBudWxsO1xyXG5sZXQgaG9tZXBhZ2VIYW5kbGVyID0gbnVsbDtcclxubGV0IG9yZW93YWxrSGFuZGxlciA9IG51bGw7XHJcblxyXG5jb25zdCBpbml0SGFuZGxlcnMgPSAoKSA9PiB7XHJcbiAgICBsYXlvdXRIYW5kbGVyID0gbmV3IExheW91dEhhbmRsZXIoKTtcclxuICAgIGNhc3RpZ2F0b3JpSGFuZGxlciA9IG5ldyBDYXN0aWdhdG9yaUhhbmRsZXIoKTtcclxuICAgIHJlZ2lzdGVyUGFnZUhhbmRsZXIgPSBuZXcgUmVnaXN0ZXJQYWdlSGFuZGxlcigpO1xyXG4gICAgcXVpekhhbmRsZXIgPSBuZXcgUXVpekhhbmRsZXIoKTtcclxuICAgIGhvbWVwYWdlSGFuZGxlciA9IG5ldyBIb21lcGFnZUhhbmRsZXIoKTtcclxuICAgIG9yZW93YWxrSGFuZGxlciA9IG5ldyBPcmVvd2Fsa0hhbmRsZXIoKTtcclxufTtcclxuXHJcbi8vIHVuY29tbWVudCB0aGlzIHRvIHVzZSBqUXVlcnlcclxuKCgkKSA9PiB7XHJcbiAgICAkKGRvY3VtZW50KS5yZWFkeSgoKSA9PiB7XHJcbiAgICAgICAgaW5pdEhhbmRsZXJzKCk7XHJcbiAgICB9KTtcclxufSkoalF1ZXJ5KTtcclxuXHJcbi8vIGluaXQgaGFuZGxlcnMgdXNpbmcgdmFuaWxsYVxyXG4vLyBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4geyBpbml0SGFuZGxlcnMoKTsgfSk7XHJcbiJdLCJtYXBwaW5ncyI6ImNBQUE7QUFDQSxJQUFJQSxhQUFhLEdBQUcsSUFBSTtBQUN4QixJQUFJQyxrQkFBa0IsR0FBRyxJQUFJO0FBQzdCLElBQUlDLG1CQUFtQixHQUFHLElBQUk7QUFDOUIsSUFBSUMsV0FBVyxHQUFHLElBQUk7QUFDdEIsSUFBSUMsZUFBZSxHQUFHLElBQUk7QUFDMUIsSUFBSUMsZUFBZSxHQUFHLElBQUk7O0FBRTFCLElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFZQSxDQUFBLEVBQVM7RUFDdkJOLGFBQWEsR0FBRyxJQUFJTyxhQUFhLEVBQUU7RUFDbkNOLGtCQUFrQixHQUFHLElBQUlPLGtCQUFrQixFQUFFO0VBQzdDTixtQkFBbUIsR0FBRyxJQUFJTyxtQkFBbUIsRUFBRTtFQUMvQ04sV0FBVyxHQUFHLElBQUlPLFdBQVcsRUFBRTtFQUMvQk4sZUFBZSxHQUFHLElBQUlPLGVBQWUsRUFBRTtFQUN2Q04sZUFBZSxHQUFHLElBQUlPLGVBQWUsRUFBRTtBQUMzQyxDQUFDOztBQUVEO0FBQ0EsQ0FBQyxVQUFDQyxDQUFDLEVBQUs7RUFDSkEsQ0FBQyxDQUFDQyxRQUFRLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLFlBQU07SUFDcEJULFlBQVksRUFBRTtFQUNsQixDQUFDLENBQUM7QUFDTixDQUFDLEVBQUVVLE1BQU0sQ0FBQzs7QUFFVjtBQUNBIn0=

//# sourceMappingURL=main.min.js.map
